# Firebase MCP 빌드 스테이지
FROM node:lts-alpine AS mcp-builder
WORKDIR /app/mcp
COPY firebase-mcp/package*.json ./
RUN npm install --ignore-scripts
COPY firebase-mcp/ ./
RUN npm run build

# FastAPI 빌드 스테이지  
FROM python:3.11-slim AS fastapi-builder
WORKDIR /app/api
COPY requirements_fastapi.txt .
RUN pip install -r requirements_fastapi.txt

# 최종 통합 스테이지
FROM python:3.11-slim
WORKDIR /app

# 시스템 패키지 설치
RUN apt-get update && apt-get install -y \
    nodejs npm nginx supervisor curl \
    && rm -rf /var/lib/apt/lists/*

# Python 의존성 설치
COPY requirements_fastapi.txt .
RUN pip install -r requirements_fastapi.txt

# Firebase MCP 복사
COPY --from=mcp-builder /app/mcp/dist ./mcp/dist
COPY --from=mcp-builder /app/mcp/package.json ./mcp/
COPY --from=mcp-builder /app/mcp/node_modules ./mcp/node_modules
COPY firebase-mcp/interior-one-click-firebase-adminsdk-mpr08-94f76b4e50.json ./mcp/

# FastAPI 및 관련 파일 복사
COPY simple_api_server.py .
COPY interior_multi_agent/ ./interior_multi_agent/
COPY .env* ./

# 설정 파일 복사
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY nginx.conf /etc/nginx/nginx.conf

# 로그 디렉토리 생성
RUN mkdir -p /var/log/supervisor

# 포트 노출
EXPOSE 8080

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Supervisor로 모든 서비스 실행
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"] 